lesson 1. Поиск и вывод на экран простых чисел между двумя введенными
**Напишите программу для вывода в консоль простых чисел, чтобы они попадали в указанный диапазон включительно. При этом числа должны окрашиваться в цвета по принципу светофора:
**первое число выводится зелёным цветом;
**второе — жёлтым;
**третье — красным.
**Диапазон, куда попадут числа, указывается при запуске программы.
**Если простых чисел в диапазоне нет, нужно, чтобы программа сообщила об этом в терминале красным цветом.
**Если аргумент, переданный при запуске, не считается числом — сообщите об этом ошибкой и завершите программу.

Для запуска урока необходимо выполнить команду:
>>npm run lesson1 5 23
После lesson1 вводим два произвольных числа, это значения между которыми будет происходить поиск простых чисел и вывод их на экран (в данном примере это яисла "5" и "23")




lesson 2. Время до поеределнной даты в секундах
**Напишите программу, которая будет принимать на вход несколько аргументов: дату и время в формате «час-день-месяц-год». Задача программы — создавать для каждого аргумента таймер
**с обратным отсчётом: посекундный вывод в терминал состояния таймеров (сколько осталось). По истечении какого-либо таймера, вместо сообщения о том, сколько осталось, требуется
**показать сообщение о завершении его работы. Важно, чтобы работа программы основывалась на событиях.

Для запуска урока необходимо выполнить команду:
>>npm run lesson2 14-28-05-2021 15-28-05-2021 27-29-07-2021 12-12-12-2020
После lesson2 вводим одну или несколько (через пробел) дат в формате час-день-месяц-год






lesson3.
**По ссылке вы найдете файл с логами запросов к серверу весом более 2 Гб. Напишите программу, которая находит в этом файле все записи с ip-адресами 89.123.1.41 и 34.48.240.111,
**а также сохраняет их в отдельные файлы с названием “%ip-адрес%_requests.log”.

Для запуска урока необходимо выполнить команду:
>>npm run lesson3





lesson4.
**В домашнем задании вам нужно будет применить полученные знания к программе, которую вы написали по итогам прошлого урока.
**Для этого превратите её в консольное приложение, по аналогии с разобранным примером и добавьте следующие функции:
** * Возможность передавать путь к директории в программу. Это актуально, когда вы не хотите покидать текущую директорию, но вам необходимо просмотреть файл, находящийся в другом месте;
** * В содержимом директории переходить во вложенные каталоги;
** * При чтении файлов искать в них заданную строку или паттерн.

Для запуска нужно написать lesson4 -p access.log (затем ввести искомое выражение)

p.s.:  package.json add
       "bin": {
         "lesson4": "lesson4.js"
       }
       Для глобального запуска из любого места
       +npm link/npm unlink
       (из любой папки пишем lesson4 и запускается наш скрипт)



